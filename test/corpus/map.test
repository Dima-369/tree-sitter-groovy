==========
Basic Map literals
==========
def canon = [hello: world, foo: bar]
def trailing = [a: 1, b: 2,]
def num_key = [1: 2]
def expr_key = [(var): 3]
def nested = [a: "hello", c: [b: "world"]]
def str_key = ["hello": false]
---

(program
  (local_variable_declaration
    declarator: (variable_declarator
      name: (identifier)
      value: (map_literal
        (map_item
          key: (identifier)
          value: (identifier))
        (map_item
          key: (identifier)
          value: (identifier)))))
  (local_variable_declaration
    declarator: (variable_declarator
      name: (identifier)
      value: (map_literal
        (map_item
          key: (identifier)
          value: (decimal_integer_literal))
        (map_item
          key: (identifier)
          value: (decimal_integer_literal)))))
  (local_variable_declaration
    declarator: (variable_declarator
      name: (identifier)
      value: (map_literal
        (map_item
          key: (decimal_integer_literal)
          value: (decimal_integer_literal)))))
  (local_variable_declaration
    declarator: (variable_declarator
      name: (identifier)
      value: (map_literal
        (map_item
          key: (identifier)
          value: (decimal_integer_literal)))))
  (local_variable_declaration
    declarator: (variable_declarator
      name: (identifier)
      value: (map_literal
        (map_item
          key: (identifier)
          value: (string_literal
            (string_fragment)))
        (map_item
          key: (identifier)
          value: (map_literal
            (map_item
              key: (identifier)
              value: (string_literal
                (string_fragment))))))))
  (local_variable_declaration
    declarator: (variable_declarator
      name: (identifier)
      value: (map_literal
        (map_item
          key: (string_literal
            (string_fragment))
          value: (false))))))
